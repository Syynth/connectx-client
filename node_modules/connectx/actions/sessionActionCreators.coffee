
Dispatcher = require 'connectx/dispatcher'
Router = require 'connectx/router'
{ActionType} = require 'connectx/config'

{SessionApi} = require 'connectx/remotes'

EntityActionCreators = require './entityActionCreators'
ConnectionActionCreators = require './connectionActionCreators'
PostActionCreators = require './postActionCreators'

recieveLoginSuccess = (user) ->
  user.id = user._id
  user.type = 'user'
  delete user.password
  delete user.salt
  delete user.verificationId
  Dispatcher.handleServerAction
    type: ActionType.UserLogin
    user: user
    entity: user

module.exports =
  logout: ->
    Dispatcher.handleClientAction
      type: ActionType.UserLogout
  tryLogin: (email, password) ->
    Dispatcher.handleClientAction
      type: ActionType.UserLoginAttempt
      email: email
      password: password
    SessionApi.postLogin {email, password}, (usr) ->
      recieveLoginSuccess usr
      ConnectionActionCreators.searchIncomingConnectionsTo usr
      PostActionCreators.queryPostsByEntity usr
      usr.connections?.map (cn) ->
        EntityActionCreators.fetchEntity cn.id, cn.type
  recieveLoginSuccess: recieveLoginSuccess
  tryRegister: (user) ->
    SessionApi.postRegister user
