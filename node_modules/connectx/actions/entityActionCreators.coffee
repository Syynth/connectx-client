Dispatcher = require 'connectx/dispatcher'
{ActionType} = require 'connectx/constants'

{EntityApi} = require 'connectx/remotes'

module.exports =

  createEntity: (type, data) ->
    Entity.Api.createEntity(type, data)
      .then (entity) => (@updateEntity entity._id, type) entity
      .catch (error) => (@failEntity entity._id, type) error

  fetchEntity: (id, type) ->
    EntityApi.fetchEntity(id, type)
      .then @updateEntity id, type
      .catch @failEntity id, type

  # BY THE POWER OF HASKELL I SUMMON THEE (it's currying)
  updateEntity: (id, type) -> (entity) ->
    entity.id = id
    entity.type = type
    Dispatcher.handleServerAction
      type: ActionType.EntityUpdate

  failEntity: (id, type) -> (error) ->
