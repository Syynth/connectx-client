Dispatcher = require 'connectx/dispatcher'
{ActionType} = require 'connectx/config'

{EntityApi} = require 'connectx/remotes'

module.exports =

  createEntity: (type, data) ->
    EntityApi.createEntity(type, data)
      .then (entity) => (@_updateEntity entity._id, type) entity
      .catch (error) => console.log error

  fetchEntity: (id, type) ->
    EntityApi.fetchEntity(id, type)
      .then @_updateEntity id, type
      .catch @_failEntity id, type

  setPrivacy: (entity, privacy) ->
    entity.privacy = privacy
    EntityApi.putEntity entity
      .then (@_updateEntity entity.id, entity.type) entity
      .catch (error) -> console.log error

  searchEntities: (type, name) ->
    EntityApi.searchEntityByName type, name
      .then (es) =>
        @_dispatchSearch type, es.map (e) =>
          e.type = type
          e.id = e._id
          e

  _dispatchSearch: (type, results) ->
    Dispatcher.handleServerAction
      type: ActionType.EntitySearch
      entities: results
      entityType: type

  _updateEntity: (id, type) -> (entity) ->
    entity.id = id
    entity.type = type
    Dispatcher.handleServerAction
      type: ActionType.EntityFetch
      entity: entity

  _failEntity: (id, type) -> (error) ->
    Dispatcher.handlerServerAction
      type: ActionType.EntityFailed
