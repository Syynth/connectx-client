NotificationActionCreators = require './notificationActionCreators'
Dispatcher = require 'connectx/dispatcher'

guid = require 'guid'

{ActionType} = require 'connectx/config'

{ConnectionApi} = require 'connectx/remotes'

module.exports =

  createConnection: (from, to) ->
    NotificationActionCreators.postNotification message: "Sending request from #{from.name} to #{to.name}"
    Dispatcher.handleClientAction
      type: ActionType.ConnectionSentClient
      from: from
      pending: true
      to: to
    ConnectionApi.createConnection from, to, {admin: false}
      .then ->
        Dispatcher.handleServerAction
          type: ActionType.ConnectionCreated
          from: from
          to: to
          pending: true
        EntityActionCreators.fetchEntity from.id, from.type

  searchIncomingConnectionsToByType: (entity, type) ->
    ConnectionApi.searchConnections(type, undefined, entity.type, entity.id, true)
      .then (results) ->
        Dispatcher.handleServerAction
          type: ActionType.ConnectionQuery
          entityType: entity.type
          entities: results

  searchIncomingConnectionsTo: (entity) ->
    for type in ['user', 'group']
      @searchIncomingConnectionsToByType entity, type
