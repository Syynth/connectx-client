
{EventEmitter} = require 'events'
Dispatcher = require 'connectx/dispatcher'
{SourceType, ActionType} = require 'connectx/constants'

BaseStore = require './baseStore'

currentUser = null
currentActor = null

class CurrentUserStore extends BaseStore
  storeKey: 'CURRENT_USER'
  constructor: (dispatcher) ->
    super dispatcher
    currentUser = @read 'currentUser'
  isLoggedIn: -> currentUser isnt null
  getCurrentUser: -> currentUser
  getCurrentActor: -> @getCurrentUser()
  handlers: [
    action: ActionType.UserLogin
    fn: (action) ->
      currentUser = action.user
      @write 'currentUser', currentUser
      @emitChange()
  ,
    action: ActionType.UpdateUser
    fn: (action) ->
      currentUser = action.user
      @write 'currentUser', currentUser
      @emitChange()
  ,
    action: ActionType.UserLogout
    fn: ->
      currentUser = null
      @write 'currentUser', currentUser
      @emitChange()
  ]

module.exports = new CurrentUserStore Dispatcher
