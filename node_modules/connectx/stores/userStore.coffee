_ = require 'lodash'
{EventEmitter} = require 'events'

{SourceType, ActionType} = require 'connectx/constants'
Dispatcher = require 'connectx/dispatcher'
Cache = require 'connectx/cache'

BaseStore = require './baseStore'

recordUser = (action) ->
  id = action.user.id
  @set id, action.user

class UserStore extends BaseStore
  storeKey: 'USER_STORE'
  schema:
    id: String
    about_text: String
    email: String
    images: [String]
    name: String
    password: String
    salt: String
    token: String
    verificationId: String
  constructor: (dispatcher) ->
    super dispatcher
    p = new Cache @read 'cache'
  getById: (id) -> @get id
  getByIdOrDefault: (id) ->
    res = @get id
    unless res
      res = _.clone @schema
      for key, val of res
        res[key] = '...'
      res.images = []
    res
  onStorageFull: -> @clearAll()
  handlers: [
    action: ActionType.UserLogin
    fn: recordUser
  ,
    action: ActionType.UserRead
    fn: recordUser
  ]

module.exports = new UserStore Dispatcher
