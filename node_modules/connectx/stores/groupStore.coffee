_ = require 'lodash'
{EventEmitter} = require 'events'

{SourceType, ActionType} = require 'connectx/constants'
Dispatcher = require 'connectx/dispatcher'
Cache = require 'connectx/cache'

BaseStore = require './baseStore'

recordGroup = (action) ->
  return if action.entity.type isnt 'group'
  id = action.entity.id
  @set id, action.entity

class GroupStore extends BaseStore
  storeKey: 'GROUP_STORE'
  schema:
    id: String
    description: String
    images: [String]
    name: String
    password: String
    salt: String
    token: String
    verificationId: String
  getOrDefault: (id) ->
    res = @get id
    unless res
      res = _.clone @schema
      for key, val of res
        res[key] = '...'
      res._id = id
      res.id = id
      res.images = []
    res
  onStorageFull: -> @clearAll()
  handlers: [
    action: ActionType.EntityFetch
    fn: recordGroup
  ]

window.GroupStore = module.exports = new GroupStore Dispatcher
