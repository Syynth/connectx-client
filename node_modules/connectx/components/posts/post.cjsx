React = require 'react'
{FileStore, CommentStore} = require 'connectx/stores'
{AutoStoreListener, ImageUrl, Formatting, CanEditPost} = require 'connectx/mixins'
{PostActionCreators} = require 'connectx/actions'
Icon = require 'connectx/components/icon'
{Link} = require 'react-router'
{OverlayTrigger, Tooltip} = require 'react-bootstrap'
CommentForm = require './commentForm'
CommentList = require './commentList'

Post = module.exports = React.createClass
  mixins: [ImageUrl, CanEditPost, Formatting, AutoStoreListener CommentStore]
  getInitialState: -> hidden: false
  getImage: ->
    if @props.pending || @props.failed
      res = FileStore.getFileForPostId @props.postId
    else
      res = @getImageUrl @props.file
    return res
  removePost: ->
    PostActionCreators.removePost {id: @props.postId}
  retryPost: ->
    if @props.failed
      PostActionCreators.retryPost @props
  toggleHidden: ->
    @setState hidden: !@state.hidden
  render: ->
    <article className="wall_post header one-edge-shadow">
      <div>
        <div className="partition" onClick={@retryPost}>
          <OverlayTrigger placement="right" overlay={if @props.failed then <Tooltip>Failed to submit post.<br /> Click to retry</Tooltip> else <div />}>
            <a><Icon fa-spinner={@props.pending} fa-spin={@props.pending} fa-warning={@props.failed} /></a>
          </OverlayTrigger>
        </div>
        <div className="hideShow partition" onClick={@toggleHidden}>
          <Icon fa-minus={!@state.hidden} fa-plus={@state.hidden} />
          <div className="clearfix" />
        </div>
      </div>
      {
        unless @state.hidden
          comments = CommentStore.getCommentsForPost @props.postId
          <div className="post_cont">
            <article className="listbox main_post">
              <div className="post_top">
                <div className="img_wrapper">
                  <figure className="img_fig">
                    <Link to="user" params={id: @props.author.id}>
                      <img className="comment_profile_img" src={@getProfilePhoto @props.author} />
                    </Link>
                  </figure>
                </div>
                <div className="post_info_cont">
                  <Link to="user" params={id: @props.author.id}>{@props.author.name}</Link>
                  <p className="date">
                    <img className="posted_icon" src="img/icons/post.png" />
                    <span>Posted on</span>
                    <span>{@formatDate @props.createdAt}</span>
                  </p>
                </div>
              </div>
              <div className="content">
                <p className="text">{@props.text}</p>
                {
                  if @props.pending or @props.failed or @props.file
                    <figure>
                      <img className="upload" src={@getImage()} />
                    </figure>
                }

              </div>
              {
                if @canEditPost()
                  <div className="post_bottom">
                    <div className="comment_count">{comments.length} comments</div>
                    <div onClick={@removePost} className="remove_post">remove post</div>
                  </div>
              }
            </article>
            <CommentList {...@props} />
            <CommentForm {...@props} />
          </div>
      }
    </article>
