# @cjsx React.DOM

React = require 'react/addons'
AddButton = require './addButton'
{Modal} = require 'react-bootstrap'
{FormState, FormHelpers} = require 'connectx/mixins'
{EntityActionCreators} = require 'connectx/actions'

module.exports = React.createClass
  render: -> <AddButton form={<GroupForm />}>Create a group</AddButton>

GroupForm = React.createClass
  mixins: [FormHelpers, FormState]
  getInitialState: -> name: '', description: '', address: '', city: '', state: '', zip: ''
  formFields:
    name:
      label: 'Name'
      required: true
    description:
      required: false
    address:
      required: true
      label: 'Street Address'
    city:
      label: 'City'
      required: true
    state:
      required: true
      match: /^[a-zA-Z]{2}$/ # Match any two letters
      message: 'State is required and must be a two letter postal code'
    zip:
      required: true
      match: /^[0-9]{5}$/
      message: 'Zip is required and must be a 5 digit number'
  cancelForm: (ev) ->
    ev.preventDefault()
    ev.stopPropagation()
    @props.onRequestHide()
  createGroup: (ev) ->
    ev.preventDefault()
    ev.stopPropagation()
    if @validate()
      data = @serializeForm()
      data.location = {}
      for prop in 'city state zip address'.split ' '
        data.location[prop] = data[prop]
        delete data[prop]
      EntityActionCreators.createEntity 'group', data
      @clearForm()
      @props.onRequestHide()
  render: ->
    <Modal title="Create a group" onRequestHide={@props.onRequestHide}>
      <div className="modal_body">
        <form>
          <h3 className="modal_title">New Group Information</h3>
          <div className="modalForm clearfix">
            <p className="col1 modal_section">
              <span>
                <label htmlFor="name">Group Name</label>
                <input name="name" ref="name" value={@state.name} onChange={@onFormChange} placeholder="Group Name" type="text" />
              </span>
              <span>
                <label htmlFor="description">Group Description</label>
                <textarea name="description" ref="description" value={@state.description} onChange={@onFormChange} placeholder="Brief Description" />
              </span>
            </p>
            <p className="col1 modal_section">
              <span>
                <label htmlFor="location">Street Address</label>
                <input name="address" ref="address" value={@state.address} onChange={@onFormChange} placeholder="" type="text" />
              </span>
            </p>
            <div className="col3 location modal_section clearfix">
              <section className="col3">
                <label htmlFor="city">City</label>
                <input name="city" value={@state.city} ref="city" onChange={@onFormChange} placeholder="city" type="text" />
              </section>
              <section className="col3">
                <label htmlFor="state">State</label>
                <input name="state" ref="state" value={@state.state} onChange={@onFormChange} placeholder="state" type="text" />
              </section>
              <section className="col3">
                <label htmlFor="zip">Zip</label>
                <input name="zip" ref="zip" value={@state.zip} onChange={@onFormChange} placeholder="zip" type="text" />
              </section>
            </div>
            <p className="btn_group modal_section">
              <button className="create" onClick={@createGroup}>Create Group</button>
              <button className="cancel" onClick={@cancelForm}>Cancel</button>
            </p>
          </div>
        </form>
      </div>
    </Modal>
